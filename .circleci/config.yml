version: 2.1
orbs:
  docker: circleci/docker@2.3.0
  ruby: circleci/ruby@2.1.0

executors:
  container:
    parameters:
      image:
        type: string
        default: $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
      tag:
        type: string
        default: << pipeline.git.revision >>
    docker:
      - image: << parameters.image >>:<< parameters.tag >>
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
        environment:
          CI: on
          DATABASE_URL: postgres://circleci@localhost/db
      - image: cimg/postgres:16.0
        environment:
          POSTGRES_DB: db
          POSTGRES_USER: circleci
          POSTGRES_HOST_AUTH_METHOD: trust

commands:
  setup:
    steps:
      - checkout
      - setup_ruby
      - setup_node
  setup_ruby:
    steps:
      - ruby/install-deps:
          key: gems-v2
  setup_node:
    steps:
      - node/install-packages:
          pkg-manager: yarn

jobs:
  containerize:
    executor:
      name: docker/machine
      dlc: true
    parameters:
      image:
        type: string
        default: $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
      tag:
        type: string
        default: << pipeline.git.revision >>
    steps:
      - checkout
      - docker/check
      - docker/build:
          image: << parameters.image >>
          tag: << parameters.tag >>
      - docker/push:
          image: << parameters.image >>
          tag: << parameters.tag >>

  deploy:
    executor:
      name: docker/machine
      dlc: true
    parameters:
      image:
        type: string
        default: $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
      tag:
        type: string
        default: << pipeline.git.revision >>
    steps:
      - docker/check
      - docker/pull:
          images: $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME:<< pipeline.git.revision >>
      - run: docker tag $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME:<< pipeline.git.revision >> $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME:latest
      - docker/push:
          image: $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
          tag: << pipeline.git.revision >>
      - run: curl $DEPLOY_URL

  brakeman:
    executor: container
    working_directory: /rails
    steps:
      - run: bundle exec brakeman -z --format html --output tmp/brakeman.html
      - store_artifacts:
          path: tmp/brakeman.html
          destination: brakeman.html

  eslint:
    executor: container
    working_directory: /rails
    steps:
      - run: yarn eslint app/packs

  prettier:
    executor: container
    working_directory: /rails
    steps:
      - run: yarn prettier --check app/packs

  rubocop:
    executor: container
    working_directory: /rails
    steps:
      - ruby/rubocop-check

  rspec:
    executor: container
    working_directory: /rails
    steps:
      - run: bin/rails db:schema:load
      - ruby/rspec-test
      - run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-$CC_TEST_REPORTER_VERSION > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter format-coverage -t simplecov coverage/coverage.json
          ./cc-test-reporter upload-coverage

workflows:
  version: 2.1
  build:
    jobs:
      - containerize
      - brakeman:
          requires:
            - containerize
      - eslint:
          requires:
            - containerize
      - prettier:
          requires:
            - containerize
      - rubocop:
          requires:
            - containerize
      - rspec:
          requires:
            - containerize
      - deploy:
          requires:
            - containerize
            - eslint
            - prettier
            - rubocop
            - rspec
          filters:
            branches:
              only:
                - main
